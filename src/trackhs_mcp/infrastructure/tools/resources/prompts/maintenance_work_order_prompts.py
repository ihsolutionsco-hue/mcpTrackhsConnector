"""
Prompts y gu√≠as para el protocolo MCP de create_maintenance_work_order
Optimizado para casos de servicio al cliente y hospitalidad
"""

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ....application.ports.api_client_port import ApiClientPort


def register_maintenance_work_order_prompts(mcp, api_client: "ApiClientPort"):
    """Registra los prompts y gu√≠as para create_maintenance_work_order"""

    @mcp.resource(
        "trackhs://prompts/maintenance-work-order",
        name="Maintenance Work Order Prompts",
        description="Gu√≠as y prompts para crear √≥rdenes de trabajo de mantenimiento en TrackHS",
        mime_type="text/plain",
    )
    async def maintenance_work_order_prompts() -> str:
        """Prompts y gu√≠as para create_maintenance_work_order"""
        return """# TrackHS Maintenance Work Order - MCP Prompts & Guidelines

## üéØ Prop√≥sito del Tool
El tool `create_maintenance_work_order` est√° dise√±ado espec√≠ficamente para manejar llamadas de servicio al cliente en el sector de hospitalidad. Permite crear √≥rdenes de trabajo de mantenimiento con prioridades textuales intuitivas y seguimiento completo del cliente.

## üìû Casos de Uso Principales

### 1. Llamadas de Hu√©spedes
**Cu√°ndo usar:** Cuando un hu√©sped reporta un problema en su unidad
**Prioridad t√≠pica:** high, critical
**Campos importantes:** source="Guest Request", source_name, source_phone, unit_id

### 2. Emergencias
**Cu√°ndo usar:** Problemas que afectan la habitabilidad
**Prioridad t√≠pica:** critical
**Campos importantes:** block_checkin=1, status="in-progress"

### 3. Mantenimiento Preventivo
**Cu√°ndo usar:** Trabajos programados de rutina
**Prioridad t√≠pica:** low, medium
**Campos importantes:** source="Preventive Maintenance", date_scheduled

### 4. Reparaciones con Proveedores
**Cu√°ndo usar:** Trabajos que requieren especialistas externos
**Prioridad t√≠pica:** medium, high
**Campos importantes:** vendor_id, status="vendor-assigned", reference_number

## üé® Prioridades Textuales Intuitivas

### trivial
- **Descripci√≥n:** Problemas menores, cosm√©ticos
- **Ejemplos:** Cambio de bombillas, ajustes menores, limpieza de manchas
- **Tiempo esperado:** 1-7 d√≠as
- **API Value:** 1

### low
- **Descripci√≥n:** Mantenimiento rutinario
- **Ejemplos:** Limpieza programada, mantenimiento preventivo, inspecciones
- **Tiempo esperado:** 1-7 d√≠as
- **API Value:** 1

### medium
- **Descripci√≥n:** Reparaciones est√°ndar
- **Ejemplos:** WiFi lento, problemas de comodidad, reparaciones menores
- **Tiempo esperado:** 1-3 d√≠as
- **API Value:** 3

### high
- **Descripci√≥n:** Problemas de comodidad del hu√©sped
- **Ejemplos:** AC no funciona, problemas de habitabilidad, comodidad
- **Tiempo esperado:** Inmediato-24 horas
- **API Value:** 5

### critical
- **Descripci√≥n:** Emergencias que afectan habitabilidad
- **Ejemplos:** Fugas de agua, problemas el√©ctricos, seguridad
- **Tiempo esperado:** Inmediato
- **API Value:** 5

## üìã Gu√≠a de Campos por Escenario

### Llamada de Hu√©sped - AC No Funciona
```python
create_maintenance_work_order(
    date_received="2024-01-15T14:00:00Z",
    priority="high",
    status="open",
    summary="AC no funciona en habitaci√≥n principal",
    estimated_cost=200.00,
    estimated_time=90,
    unit_id=101,
    reservation_id=37152796,
    description="Hu√©sped reporta que el aire acondicionado no enfr√≠a la habitaci√≥n",
    source="Guest Request",
    source_name="Maria Garcia",
    source_phone="+1234567890"
)
```

### Emergencia - Fuga de Agua
```python
create_maintenance_work_order(
    date_received="2024-01-15T20:30:00Z",
    priority="critical",
    status="in-progress",
    summary="Fuga de agua en ba√±o principal",
    estimated_cost=150.00,
    estimated_time=60,
    unit_id=205,
    block_checkin=1,
    source="Guest Request",
    source_name="John Smith",
    source_phone="+1987654321",
    description="Fuga importante que requiere atenci√≥n inmediata"
)
```

### Mantenimiento Preventivo
```python
create_maintenance_work_order(
    date_received="2024-01-15",
    priority="low",
    status="not-started",
    summary="Limpieza profunda programada",
    estimated_cost=0.00,
    estimated_time=120,
    unit_id=102,
    date_scheduled="2024-01-20T09:00:00Z",
    source="Preventive Maintenance",
    user_id=5
)
```

## üîß Mejores Pr√°cticas para MCP

### 1. Siempre Incluir Informaci√≥n del Cliente
- **source:** Identificar el origen (Guest Request, Inspection, etc.)
- **source_name:** Nombre de quien reporta
- **source_phone:** Tel√©fono de contacto
- **description:** Detalles del problema reportado

### 2. Usar Prioridades Apropiadas
- **critical:** Solo para emergencias reales
- **high:** Problemas de comodidad del hu√©sped
- **medium:** Reparaciones est√°ndar
- **low:** Mantenimiento rutinario
- **trivial:** Problemas menores

### 3. Configurar Block Check-in Correctamente
- **block_checkin=1:** Solo cuando la unidad no es habitable
- **block_checkin=0:** Para problemas que no afectan habitabilidad

### 4. Asignar Responsables
- **user_id:** Para personal interno
- **vendor_id:** Para proveedores externos
- **status:** Reflejar el estado actual del trabajo

## üìä Estados y Flujos de Trabajo

### Flujo T√≠pico de Llamada de Hu√©sped
1. **open** ‚Üí Orden creada, pendiente de asignaci√≥n
2. **in-progress** ‚Üí Trabajo iniciado
3. **completed** ‚Üí Trabajo terminado
4. **processed** ‚Üí Orden cerrada administrativamente

### Flujo con Proveedor Externo
1. **vendor-assigned** ‚Üí Asignada a proveedor
2. **vendor-accepted** ‚Üí Proveedor acept√≥
3. **vendor-completed** ‚Üí Proveedor termin√≥
4. **completed** ‚Üí Orden finalizada

## üö® Manejo de Errores Comunes

### Error: "Priority is invalid"
- **Causa:** Usar valores num√©ricos en lugar de textuales
- **Soluci√≥n:** Usar "trivial", "low", "medium", "high", "critical"

### Error: "A unit is required with a work order"
- **Causa:** No incluir unit_id
- **Soluci√≥n:** Siempre incluir unit_id (default: 1)

### Error: "Invalid date format"
- **Causa:** Formato de fecha incorrecto
- **Soluci√≥n:** Usar ISO 8601 (YYYY-MM-DD o YYYY-MM-DDTHH:MM:SSZ)

## üí° Tips para Servicio al Cliente

### 1. Capturar Informaci√≥n Completa
- Siempre pedir nombre y tel√©fono del hu√©sped
- Obtener detalles espec√≠ficos del problema
- Identificar la unidad afectada

### 2. Priorizar Correctamente
- **critical:** Emergencias de seguridad o habitabilidad
- **high:** Problemas que afectan la comodidad del hu√©sped
- **medium:** Reparaciones que pueden esperar
- **low:** Mantenimiento programado

### 3. Seguimiento
- Usar reference_number para tracking
- Actualizar status seg√∫n progreso
- Documentar work_performed cuando se complete

## üéØ Ejemplos de Prompts para AI

### Para Llamada de Hu√©sped
```
"Un hu√©sped llama reportando que el aire acondicionado no funciona en su habitaci√≥n.
Crea una orden de trabajo con prioridad alta, incluyendo la informaci√≥n del hu√©sped
y asegur√°ndote de que se asigne a la unidad correcta."
```

### Para Emergencia
```
"Hay una fuga de agua importante en la unidad 205. El hu√©sped est√° muy preocupado
y necesita atenci√≥n inmediata. Crea una orden de emergencia que bloquee el check-in
hasta que se resuelva el problema."
```

### Para Mantenimiento Preventivo
```
"Es hora de hacer la limpieza profunda programada de la unidad 102. Crea una orden
de mantenimiento preventivo para la pr√≥xima semana."
```

## üìà M√©tricas y Seguimiento

### Campos Importantes para Reportes
- **source:** Para identificar origen de √≥rdenes
- **priority:** Para an√°lisis de urgencia
- **status:** Para seguimiento de progreso
- **estimated_cost vs actual_time:** Para an√°lisis de eficiencia

### Indicadores Clave
- Tiempo promedio de resoluci√≥n por prioridad
- N√∫mero de √≥rdenes por fuente
- Costo promedio por tipo de problema
- Satisfacci√≥n del hu√©sped (basado en follow-up)

## üîÑ Integraci√≥n con Otros Tools

### Con search_reservations
- Buscar reserva del hu√©sped para obtener unit_id
- Verificar estado de la reserva
- Obtener informaci√≥n de contacto

### Con search_units
- Verificar disponibilidad de la unidad
- Obtener detalles de la propiedad
- Confirmar amenities afectados

### Con get_reservation
- Obtener detalles completos de la reserva
- Verificar fechas de check-in/check-out
- Identificar hu√©sped principal
"""
