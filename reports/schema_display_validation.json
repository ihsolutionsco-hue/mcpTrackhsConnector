{
  "timestamp": "2024-01-15T10:00:00Z",
  "schema_validation": {
    "descriptions": {
      "clarity": [],
      "examples": [],
      "constraints": [],
      "missing_info": [],
      "expected_descriptions": {
        "page": "Page number (0-based indexing). Max total results: 10,000.",
        "size": "Number of results per page (1-100)",
        "sort_column": "Column to sort by. Valid values: name, status, altConf, agreementStatus, type, guest, guests, unit, units, checkin, checkout, nights. Disabled when using scroll.",
        "sort_direction": "Sort direction: 'asc' or 'desc'. Disabled when using scroll.",
        "search": "Full-text search in reservation names, guest names, and descriptions",
        "status": "Filter by reservation status. Comma-separated values: 'Confirmed,Cancelled'. Valid statuses: Hold, Confirmed, Cancelled, Checked In, Checked Out",
        "in_house_today": "Filter by in-house today (0=not in house, 1=in house)",
        "scroll": "Elasticsearch scroll for large datasets. Use '1' to start a new scroll, or provide the scroll ID from previous response to continue. Disables sorting when active."
      }
    },
    "parameter_mapping": {
      "camelCase_mapping": {
        "sort_column": "sortColumn",
        "sort_direction": "sortDirection",
        "node_id": "nodeId",
        "unit_id": "unitId",
        "contact_id": "contactId",
        "travel_agent_id": "travelAgentId",
        "campaign_id": "campaignId",
        "user_id": "userId",
        "unit_type_id": "unitTypeId",
        "rate_type_id": "rateTypeId",
        "reservation_type_id": "reservationTypeId",
        "booked_start": "bookedStart",
        "booked_end": "bookedEnd",
        "arrival_start": "arrivalStart",
        "arrival_end": "arrivalEnd",
        "departure_start": "departureStart",
        "departure_end": "departureEnd",
        "updated_since": "updatedSince",
        "in_house_today": "inHouseToday",
        "group_id": "groupId",
        "checkin_office_id": "checkinOfficeId"
      },
      "date_parameters": [
        "booked_start",
        "booked_end",
        "arrival_start",
        "arrival_end",
        "departure_start",
        "departure_end",
        "updated_since"
      ],
      "id_parameters": [
        "node_id",
        "unit_id",
        "contact_id",
        "travel_agent_id",
        "campaign_id",
        "user_id",
        "unit_type_id",
        "rate_type_id",
        "reservation_type_id",
        "group_id",
        "checkin_office_id"
      ]
    },
    "constraints": {
      "numeric_constraints": {
        "page": {
          "min": 0,
          "max": 10000,
          "default": 0
        },
        "size": {
          "min": 1,
          "max": 100,
          "default": 10
        },
        "in_house_today": {
          "min": 0,
          "max": 1
        }
      },
      "string_constraints": {
        "search": {
          "max_length": 200
        },
        "sort_direction": {
          "pattern": "^(asc|desc)$"
        }
      },
      "date_constraints": {
        "format": "ISO 8601",
        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}Z)?$"
      }
    },
    "example": {
      "tool_name": "search_reservations",
      "description": "Search reservations in Track HS API with advanced filtering and pagination",
      "parameters": {
        "page": {
          "type": "integer",
          "default": 0,
          "description": "Page number (0-based indexing). Max total results: 10,000.",
          "minimum": 0,
          "maximum": 10000
        },
        "size": {
          "type": "integer",
          "default": 10,
          "description": "Number of results per page (1-100)",
          "minimum": 1,
          "maximum": 100
        },
        "sort_column": {
          "type": "string",
          "default": "name",
          "description": "Column to sort by. Valid values: name, status, altConf, agreementStatus, type, guest, guests, unit, units, checkin, checkout, nights. Disabled when using scroll.",
          "enum": [
            "name",
            "status",
            "altConf",
            "agreementStatus",
            "type",
            "guest",
            "guests",
            "unit",
            "units",
            "checkin",
            "checkout",
            "nights"
          ]
        },
        "sort_direction": {
          "type": "string",
          "default": "asc",
          "description": "Sort direction: 'asc' or 'desc'. Disabled when using scroll.",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "search": {
          "type": "string",
          "description": "Full-text search in reservation names, guest names, and descriptions",
          "maxLength": 200
        },
        "status": {
          "type": "string",
          "description": "Filter by reservation status. Comma-separated values: 'Confirmed,Cancelled'. Valid statuses: Hold, Confirmed, Cancelled, Checked In, Checked Out",
          "enum": [
            "Hold",
            "Confirmed",
            "Checked Out",
            "Checked In",
            "Cancelled"
          ]
        },
        "in_house_today": {
          "type": "integer",
          "description": "Filter by in-house today (0=not in house, 1=in house)",
          "minimum": 0,
          "maximum": 1
        },
        "scroll": {
          "type": "string",
          "description": "Elasticsearch scroll for large datasets. Use '1' to start a new scroll, or provide the scroll ID from previous response to continue. Disables sorting when active."
        }
      }
    }
  },
  "type_validation": {
    "required_fields": [
      "page",
      "size",
      "sort_column",
      "sort_direction"
    ],
    "optional_fields": [
      "search",
      "tags",
      "node_id",
      "unit_id",
      "contact_id",
      "travel_agent_id",
      "campaign_id",
      "user_id",
      "unit_type_id",
      "rate_type_id",
      "reservation_type_id",
      "booked_start",
      "booked_end",
      "arrival_start",
      "arrival_end",
      "departure_start",
      "departure_end",
      "updated_since",
      "status",
      "in_house_today",
      "group_id",
      "checkin_office_id",
      "scroll"
    ],
    "type_issues": [],
    "description_issues": [],
    "type_validations": {
      "page": {
        "expected": "int",
        "constraints": [
          "ge=0",
          "le=10000"
        ]
      },
      "size": {
        "expected": "int",
        "constraints": [
          "ge=1",
          "le=100"
        ]
      },
      "sort_column": {
        "expected": "str",
        "constraints": [
          "default='name'"
        ]
      },
      "sort_direction": {
        "expected": "str",
        "constraints": [
          "default='asc'"
        ]
      },
      "search": {
        "expected": "Optional[str]",
        "constraints": [
          "max_length=200"
        ]
      },
      "status": {
        "expected": "Optional[str]",
        "constraints": [
          "comma-separated"
        ]
      },
      "in_house_today": {
        "expected": "Optional[int]",
        "constraints": [
          "ge=0",
          "le=1"
        ]
      },
      "group_id": {
        "expected": "Optional[int]",
        "constraints": []
      },
      "checkin_office_id": {
        "expected": "Optional[int]",
        "constraints": []
      },
      "scroll": {
        "expected": "Optional[str]",
        "constraints": [
          "elasticsearch"
        ]
      }
    }
  },
  "issues": [],
  "recommendations": [
    {
      "priority": "medium",
      "category": "type_safety",
      "title": "Use more specific types for better validation",
      "description": "Consider using Literal types for enum values and more specific Optional types",
      "example": "status: Optional[Literal['Hold', 'Confirmed', 'Checked Out', 'Checked In', 'Cancelled']]"
    },
    {
      "priority": "low",
      "category": "documentation",
      "title": "Add more detailed examples in descriptions",
      "description": "Include more examples in field descriptions to help users understand usage",
      "example": "Add examples like 'Example: status=Confirmed,Cancelled'"
    }
  ]
}