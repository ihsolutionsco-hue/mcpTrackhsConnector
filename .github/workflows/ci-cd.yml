name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov
        pip install black isort flake8
        pip install coverage

    - name: Set up Python path
      run: |
        echo "PYTHONPATH=${{ github.workspace }}/src:$PYTHONPATH" >> $GITHUB_ENV

    - name: Set up test environment
      run: |
        cat > .env << EOF
        TRACKHS_API_URL=https://api-test.trackhs.com/api
        TRACKHS_USERNAME=test_user
        TRACKHS_PASSWORD=test_password
        TRACKHS_TIMEOUT=30
        HOST=0.0.0.0
        PORT=8080
        CORS_ORIGINS=https://elevenlabs.io,https://app.elevenlabs.io
        DEBUG=false
        EOF

    - name: Run MCP Protocol Tests
      run: |
        pytest tests/test_mcp_protocol.py tests/test_mcp_server.py -v --tb=short

    - name: Validate MCP Server
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'src')
        from trackhs_mcp.server import mcp
        print('✅ MCP Server imports successfully')
        "

    - name: Check MCP Components Registration
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'src')
        from trackhs_mcp.infrastructure.tools.registry import register_all_tools
        from trackhs_mcp.infrastructure.tools.resources import register_all_resources
        from trackhs_mcp.infrastructure.prompts.reservations import register_all_prompts
        from fastmcp import FastMCP
        from unittest.mock import Mock

        mcp = FastMCP('Test Server')
        mock_client = Mock()

        register_all_tools(mcp, mock_client)
        register_all_resources(mcp, mock_client)
        register_all_prompts(mcp, mock_client)

        print('✅ All MCP components registered successfully')
        "

    - name: Validate FastMCP Configuration
      if: github.ref == 'refs/heads/main'
      run: |
        python -c "
        import json
        with open('fastmcp.json', 'r') as f:
            config = json.load(f)
        print('✅ FastMCP configuration is valid')
        print(f'📋 Server: {config[\"server\"][\"name\"]}')
        print(f'📋 Transport: {config[\"transport\"][\"type\"]}')
        "

    - name: Test MCP Server Startup
      if: github.ref == 'refs/heads/main'
      run: |
        export TRACKHS_API_URL="https://api-test.trackhs.com/api"
        export TRACKHS_USERNAME="test_user"
        export TRACKHS_PASSWORD="test_password"
        export TRACKHS_TIMEOUT="30"
        export HOST="0.0.0.0"
        export PORT="8080"
        export CORS_ORIGINS="https://elevenlabs.io,https://app.elevenlabs.io"
        export DEBUG="false"

        python -c "
        import sys
        sys.path.insert(0, 'src')
        from trackhs_mcp.server import mcp
        print('✅ MCP Server created successfully')
        print(f'📋 Server name: {mcp.name if hasattr(mcp, \"name\") else \"TrackHS MCP Server\"}')
        "

    - name: Deploy to FastMCP Cloud
      if: github.ref == 'refs/heads/main'
      run: |
        echo "🚀 Deploying to FastMCP Cloud..."
        echo "✅ MCP Server ready for deployment"
        echo "📋 Configuration:"
        echo "  - Server: TrackHS MCP Server"
        echo "  - Transport: HTTP"
        echo "  - Port: 8080"
        echo "  - Tools: 7 MCP tools registered"
        echo "  - Resources: 16 MCP resources available"
        echo "  - Prompts: 3 MCP prompts available"
        echo ""
        echo "🔗 FastMCP Cloud will handle the deployment automatically"
        echo "📝 Make sure to configure environment variables in FastMCP Cloud:"
        echo "  - TRACKHS_API_URL"
        echo "  - TRACKHS_USERNAME"
        echo "  - TRACKHS_PASSWORD"
        echo "  - TRACKHS_TIMEOUT"
