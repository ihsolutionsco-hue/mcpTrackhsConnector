#!/usr/bin/env python3
"""
Test para verificar el problema de validaci√≥n de Pydantic en search_units
"""

from typing import Optional, Union

from pydantic import Field, ValidationError
from pydantic.functional_validators import BeforeValidator


def test_pydantic_validation():
    """Test para demostrar el problema de validaci√≥n de Pydantic"""

    print("üß™ Probando validaci√≥n de Pydantic...")

    # Simular la definici√≥n actual (problem√°tica)
    from pydantic import BaseModel

    class SearchUnitsCurrent(BaseModel):
        bedrooms: Optional[str] = None
        is_active: Optional[str] = None
        is_bookable: Optional[str] = None

    class SearchUnitsFixed(BaseModel):
        bedrooms: Optional[Union[int, str]] = None
        is_active: Optional[Union[int, str]] = None
        is_bookable: Optional[Union[int, str]] = None

    print("\n1. Validaci√≥n con definici√≥n actual (str) y par√°metros int:")
    try:
        model = SearchUnitsCurrent(bedrooms=4, is_active=1, is_bookable=1)
        print(f"‚úÖ Modelo creado: {model}")
    except ValidationError as e:
        print(f"‚ùå Error de validaci√≥n: {e}")
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")

    print("\n2. Validaci√≥n con definici√≥n actual (str) y par√°metros str:")
    try:
        model = SearchUnitsCurrent(bedrooms="4", is_active="1", is_bookable="1")
        print(f"‚úÖ Modelo creado: {model}")
    except ValidationError as e:
        print(f"‚ùå Error de validaci√≥n: {e}")
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")

    print(
        "\n3. Validaci√≥n con definici√≥n corregida (Union[int, str]) y par√°metros int:"
    )
    try:
        model = SearchUnitsFixed(bedrooms=4, is_active=1, is_bookable=1)
        print(f"‚úÖ Modelo creado: {model}")
    except ValidationError as e:
        print(f"‚ùå Error de validaci√≥n: {e}")
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")

    print(
        "\n4. Validaci√≥n con definici√≥n corregida (Union[int, str]) y par√°metros str:"
    )
    try:
        model = SearchUnitsFixed(bedrooms="4", is_active="1", is_bookable="1")
        print(f"‚úÖ Modelo creado: {model}")
    except ValidationError as e:
        print(f"‚ùå Error de validaci√≥n: {e}")
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")


if __name__ == "__main__":
    test_pydantic_validation()
