[tool:pytest]
# Configuración de pytest para tests de search_units

# Marcadores personalizados
markers =
    unit: Tests unitarios
    integration: Tests de integración
    api: Tests contra API real
    e2e: Tests end-to-end
    slow: Tests lentos
    performance: Tests de rendimiento

# Configuración de tests
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Configuración específica para search_units
[tool:pytest:search_units]
testpaths = tests/search_units
markers =
    unit: Tests unitarios para search_units
    integration: Tests de integración para search_units
    api: Tests contra API real para search_units
    e2e: Tests end-to-end para search_units

# Opciones por defecto
addopts =
    --strict-markers
    --disable-warnings
    --tb=short
    -v

# Configuración de asyncio
asyncio_mode = auto

# Configuración de cobertura
[coverage:run]
source = src/trackhs_mcp
omit =
    */tests/*
    */test_*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod